package TimeTable;

import java.awt.*;
import java.io.IOException;
import javax.swing.*;
import java.awt.event.*;
import JDBC.retrive_data;
//import javax.swing.JButton;
//import javax.swing.JLabel jLabel1;
//import javax.swing.JScrollPane jScrollPane1;
//import javax.swing.JScrollPane jScrollPane2;
//import javax.swing.JTable jTable1;
//import javax.swing.JTable jTable2;
//import javax.swing.JTextField jTextField1;




public class TimeTableMain extends javax.swing.JFrame{

	/**
//	 * @param args
//	 * @throws IOException
	 */

	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTable jTable1;
	private javax.swing.JTable jTable2;
	private javax.swing.JTable jTable3;
	private javax.swing.JTextField jTextField1;

	public static String ProfessorData[][] = new String[100][100];
	public static String ClassRoomData[][] = new String[100][100];
	public static String SubjectData[][] = new String[100][100];
	public static int ProfessorRows = 0;
	public static int Professorcolumns = 0;
	public static int ClassRoomRows = 0;
	public static int ClassRoomColumns = 0;
	public static int SubjectRows = 0;
	public static int SubjectColumns = 0;



	public void startInit(int a) throws IOException{
		Initialization initialize=new Initialization();
		initialize.readInput(a);
	}

	public void startProgram(int a){
		System.out.println("Start.......");

		try{
			this.startInit(a);
		}
		catch (Exception e){
		}
	}

	public TimeTableMain() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		
		retrive_data ret = new retrive_data();

		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTable2 = new javax.swing.JTable();
		jScrollPane3 = new javax.swing.JScrollPane();
		jTable3 = new javax.swing.JTable();
		jTextField1 = new javax.swing.JTextField();
		jButton1 = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jTable1.setModel(new javax.swing.table.DefaultTableModel(
				ret.resultSet,
				new String [] {
						"Div.","Room no.","Capacity","Is Lab","Dept"
				}
		));
		jScrollPane1.setViewportView(jTable1);

		jTable2.setModel(new javax.swing.table.DefaultTableModel(
				ret.resultSet1,
				new String [] {
						"ID", "Professor", "Subject"
				}
		));
		jScrollPane2.setViewportView(jTable2);

		jTextField1.setText("1");

		jButton1.setText("Generate");

		jLabel1.setText("Class");
		jTable3.setModel(new javax.swing.table.DefaultTableModel(
				ret.resultSet2,
				new String [] {
						"ID", "Subject", "No. of Lectures", "Lab","Dept."
				}
		));
		jScrollPane3.setViewportView(jTable3);


		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addGap(20, 20, 20)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(layout.createSequentialGroup()
												.addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(jLabel1)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jButton1)))
										.addGroup(layout.createSequentialGroup()
												.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
												.addGap(18, 18, 18)
												.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addContainerGap())
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
										.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(layout.createSequentialGroup()
												.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel1))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(jButton1)))
								.addContainerGap(20, Short.MAX_VALUE))
		);

		pack();

		jButton1.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				String s1=jTextField1.getText();
				int a = Integer.parseInt(s1);
				s1 = "TimeTable Generated" + Integer.toString(a);
				jTextField1.setText(s1);
				startProgram(a);
//				System.out.println("HIII TEMP IS : "+tempS);
			}
		});
		getProfessorData();
		getClassRoomData();
		getSubjectData();
	}// </editor-fold>

	public void getProfessorData(){
		int row = jTable2.getRowCount();
		int columns = jTable2.getColumnCount();
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < columns; j++) {
				ProfessorData[i][j] = (String) jTable2.getValueAt(i, j);
			}
		}
		ProfessorRows = row;
		Professorcolumns = columns;
	}

	public void getClassRoomData(){
		int row = jTable1.getRowCount();
		int columns = jTable1.getColumnCount();
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < columns; j++) {
				ClassRoomData[i][j] = (String) jTable1.getValueAt(i, j);
			}
		}
		ClassRoomRows = row;
		ClassRoomColumns = columns;
	}

	public void getSubjectData(){
		int row = jTable3.getRowCount();
		int columns = jTable3.getColumnCount();
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < columns; j++) {
				SubjectData[i][j] = (String) jTable3.getValueAt(i, j);
			}
		}
		SubjectRows = row;
		SubjectColumns = columns;
	}

	/**
	 * @param args the command line arguments
	 */

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		TimeTableMain tt = new TimeTableMain();

		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(TimeTableMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(TimeTableMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(TimeTableMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(TimeTableMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

        /* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new TimeTableMain().setVisible(true);
			}
		});

		//Program starts................
	}
}
